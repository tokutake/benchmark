#!/bin/bash
#
# Run all language programs and print time.
# Pass common upper limit and each program calculation sum of 0 to upper limit.

# upper limit number pass to program as a argument
upper=1000000002

# set limit from argument
if [[ -n "$1" ]]; then
  upper="$1"
fi

echo "===> Upper limit"
echo ${upper}
echo

echo "===> C++"
cd cpp
bazel build loop --compilation_mode opt
time ./bazel-bin/loop ${upper}
cd ..
echo

echo "===> Rust with opt-level=2"
rustc --version
rustc -O loop.rs
time ./loop ${upper}
rm ./loop
echo

echo "===> zig build loop.zig"
cd zig
zig version
zig build
time echo $upper | ./zig-out/bin/zig
echo
cd ..

echo "===> zig build loop.zig -O ReleaseFast"
cd zig
zig version
zig build-exe src/main.zig -O ReleaseFast
time echo $upper | ./main
rm main main.o
echo
cd ..

echo "===> zig build loop.zig -O ReleaseSafe"
cd zig
zig version
zig build-exe src/main.zig -O ReleaseSafe
time echo $upper | ./main
rm main main.o
echo
cd ..

echo "===> Nim"
cd nim
nim --version
nim c main.nim
time ./main $upper
rm main
echo
cd ..

rbenv_root=$(rbenv root)

echo "===> Ruby 2.7.7"
eval ${rbenv_root}/versions/2.7.7/bin/ruby --version
time ${rbenv_root}/versions/2.7.7/bin/ruby loop.rb ${upper}
echo

echo "===> Ruby 3.3.1"
eval ${rbenv_root}/versions/3.3.1/bin/ruby --version
time ${rbenv_root}/versions/3.3.1/bin/ruby loop.rb ${upper}
echo

echo "===> JavaScript using node runtime"
node --version
time node loop.mjs ${upper}
echo

echo "===> JavaScript using bun runtime"
node --version
time $HOME/.bun/bin/bun loop.mjs ${upper}
echo
